import{_ as t,p as e,q as n,a1 as p}from"./framework-5866ffd3.js";const r={},_=p('<p>框架设计时针对开发层面的核心要素</p><p>1.1 提升用户的开发体验</p><ul><li>报错信息</li><li>输出信息</li></ul><p>推论：源码内部，必然存在大量的此类提升开发体验的代码，包括各类异常处理等，这些都跟核心逻辑无关，阅读源码时候，需有意识的剔除。</p><p>1.2 控制框架的体积</p><p>通过区分开发环境和生产环境、使提示信息等相关代码成为dead code，再通过打包工具进行移除</p><p>1.3 做好tree-shaking</p><p>函数副作用：调用该函数时，会影响外部作用域</p><p>现在打包工具本质支持遵循esm规范的treeking，但打包工具无法判断调用函数是否会产生副作用，需要开发者自行添加<code>/*$__PURE__*/</code>表明，以达到良好的treeShaking效果。</p><p>1.4 构建产物输出</p><table><thead><tr><th style="text-align:center;">使用场景</th><th style="text-align:center;">Script标签使用</th><th style="text-align:center;">支持ESM的浏览器内Script标签使用</th><th style="text-align:center;">requirejs使用、服务端渲染</th></tr></thead><tbody><tr><td style="text-align:center;">格式</td><td style="text-align:center;">IIFE</td><td style="text-align:center;">esm</td><td style="text-align:center;">cjs</td></tr><tr><td style="text-align:center;">配置方法</td><td style="text-align:center;">output.format === &#39;iife&#39;</td><td style="text-align:center;">output.format === &#39;esm&#39;</td><td style="text-align:center;">output.format === &#39;cjs&#39;</td></tr></tbody></table><p>1.5 特性开关</p><p>框架设计师，可以通过在打包时配置变量+代码中使用变量的方式，来实现由用户自行决定是否开启某个特性，这样做的好处是可以进一步提高Treeshaking的粒度。</p><p>在Vue3中，可以通过配置_<wbr>_VUE_OPTIONS_API__配置来决定是否开始options api</p><p>1.6 错误处理</p><p>需提供机制，由用户决定如何处理错误，具体来说，提供注册错误处理函数的机制，代码内部，统一进行错误处理，调用用户注册的错误处理函数。</p><p>1.7 ts支持</p>',17),l=[_];function a(s,c){return e(),n("div",null,l)}const d=t(r,[["render",a],["__file","框架设计时针对开发层面的核心要素.html.vue"]]);export{d as default};
