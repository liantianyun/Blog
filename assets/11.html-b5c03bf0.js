import{_ as p,p as t,q as r,a1 as n}from"./framework-5866ffd3.js";const o={},s=n('<h1 id="一个整治标题党的脑洞" tabindex="-1"><a class="header-anchor" href="#一个整治标题党的脑洞" aria-hidden="true">#</a> 一个整治标题党的脑洞</h1><p>今天打开了公众号后台查看发布过的文章数据，突然注意到一个我以前未关注到的有意思的指标：<strong>送达阅读率</strong>（下文简称“阅读率”）。</p><p>这个指标代表的是：<strong>当文章推送到订阅者的公众号中时，它们点开你的文章观看的比例</strong>。</p><p>于是我纵览了一下我发布过的50几篇文章，这个指标的数据大部分在10~50%之间，我感觉这个数据应该还算可以（感谢我的订阅者们），不过也自然一眼就看到了哪些文章的阅读率相对来说，哪些文章的阅读率比较低。</p><p>这时候我就在想，是什么核心因素在影响这个指标？</p><p>很容易想到答案：在点开你的文章内容之前，呈现在用户面前的，只有封面和标题，而这两者之中，标题又往往是起决定性作用的。</p><p>那么对于自媒体作者而言，想让自己的作品尽可能多的被读，就必须研究：怎么才能取一个吸引人的标题？</p><p><strong>研究的结果自然就是几乎互联网全是标题党</strong>。</p><p>因为如果用户连读都不读，你谈什么内容质量呢？</p><p>从文学创作本身而言，“标题”的作用，应该是让读者大概知道本文讲述的是什么内容，从而决定是否对该内容有兴趣，人人都按这个标准取名，是最理想的市场环境。</p><p>然而<strong>这在互联网上是不可能的。</strong></p><p>为什么呢？</p><p><strong>最本质的原因，就是互联网上的信息生产者相比于信息消费者，是供过于求的。</strong></p><p>假如说用户只关注了两个信息服务生产者A和B，他们分别发布了一篇五分钟可以读完的文章，而用户拥有十分钟的时间来消费内容，那么即便A比B的标题朴实无华的多，用户也极有可能分别的看完这两篇文章，然后根据内容质量给出对这两篇文章的客观评价。</p><p>但实际情况是，用户的公众号关注列表，可能多达上百个，他不可能一一的去把内容都看完，在决定看哪些内容之前，他需要一个快速筛选目标的机制，而这个机制，目前只能是标题——哪怕这个机制可能让他错过这里面对他最有价值的内容。</p><p>所以<strong>这些过剩的内容提供商，就必须把“得到用户的注意力”作为第一目标，“传达文章内容主题”这个目标就无法得到实现了</strong>。</p><p>久而久之，就很少货物对版的信息内容了，因为大家都这么干，你不干，就被淘汰掉了。</p><p>这是一种典型的“<strong>劣币驱逐良币</strong>”的现象。</p><p><strong>即便你是一个有良心的作者，但如果你无法适应这个规则，就是逆水行舟，你的路走的会比其他人更为艰难。</strong></p><p>怎么解决呢？</p><p>这里就开一下脑洞，我觉得<strong>可以用AI解决</strong>。</p><p>即：<strong>内容制作者不再拥有制定标题和封面的权力，让AI来初步确定一个标题。如今的AI，应该具有一定的能力大概读懂文章含义，并产出一个标题和对应的封面。</strong></p><p>为什么是“初步确定”？因为AI可能会有错误，取得名字并不是最优的，那么接下来，就由读者在文章内发起投票，每个用户（包括作者）可以提出自己对这篇文章的内容的标题建议作为投票选项，由每一个读者分别投票，取选票数最高的作为文章的后续展示标题。</p><p>这样做的巧妙之处在于：<strong>既可以增加互动，提高用户对于文章的参与度，还能锻炼用户对于文章内容的总结能力。而且，并不会因为都是用户投票的产生的标题，就缺乏趣味性，实际上，无数的互联网实践已经证明，用户集思广益的所表现出的创造力是无穷的，你去看下各种平台的内容评论区的人才们就可以明显的观察到这一点。</strong></p><p>而那些还未看过这篇文章的人，也因为知悉这个规则，<strong>知道文章的标题不论是很有创意、仍然显得像标题党也好，还是比较务实贴近文章主题也好，都是用户自行投票产生的，会倾向于更相信这个标题的公信力。</strong></p><p>这个模式我想到的一个可能面临的缺点在于：<strong>万一AI取的太离谱，就会让一些好文章失去它该有的第一波流量</strong>。</p><p><strong>不过即使如此，我觉得从数学期望上来讲，这个机制的总体收益应该也比原先用户自行取名全是标题党的方法要好。</strong></p><p>我觉得我这个建议听着非常棒，你们觉得咧？</p>',28),g=[s];function e(a,c){return t(),r("div",null,g)}const d=p(o,[["render",e],["__file","11.html.vue"]]);export{d as default};
