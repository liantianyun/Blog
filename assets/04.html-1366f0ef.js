import{_ as e,p as a,q as o,a1 as r}from"./framework-5866ffd3.js";const i={},p=r('<h1 id="_07-04-liuyubobo老师的算法课" tabindex="-1"><a class="header-anchor" href="#_07-04-liuyubobo老师的算法课" aria-hidden="true">#</a> 07/04 liuyubobo老师的算法课</h1><h3 id="工作的心态" tabindex="-1"><a class="header-anchor" href="#工作的心态" aria-hidden="true">#</a> 工作的心态</h3><p>最近的工作心态就变成了有需求来就好好完成，没需求就好好学习了，以前会想，如果手上没事，是不是应该主动去要点活，如果闲了一段时间会有点负罪感，理论上来说这样是对的，但是还是选择自私一点吧，个人成长重要。</p><h3 id="liuyubobo老师的算法课" tabindex="-1"><a class="header-anchor" href="#liuyubobo老师的算法课" aria-hidden="true">#</a> liuyubobo老师的算法课</h3><p>最近在刷算法，一开始是跟着吴军老师的《计算之魂》这本书，不过感觉效果不是很好，想了一下，还是想起了慕课网上的liuyubobo老师的算法课。</p><p>这里，我要推荐一下他。</p><p>大四快找工作的时候，我曾经正儿八经、踏踏实实的学了一段时间和数据结构，当时还不想做前端，还是奔着后端的面试标准去准备的，而学算法嘛，有过体会的人都知道，算法应该是计算机专业课里面最难的内容部分了吧。</p><p>也正因如此，这是衡量一个科班出身的工程师的专业能力的核心指标，尽管业务上大部分情况用不到，但大公司面试还是很喜欢考察算法能力的。</p><p>也正因如此，市面上讲解算法的教程真是百花齐放，目不暇接，质量参差不齐。</p><p>在我接触过的讲算法的老师里，liuyubobo老师是我认为讲的最好的一个。</p><p>我不太喜欢通过视频学习，因为我感觉视频相比文字，不如看文字灵活，读者可以自由调节速度，通过眼睛的移动即可实现反复阅读，而视频相对来说麻烦一些。</p><p>但是不得不说，对于讲解算法这种，运行过程<strong>比较抽象的东西，使用图形、动画、视频的形式更有利于读者理解</strong>。</p><p>而liuyubobo老师的算法课就是通过视频来讲解算法的，在学习他的课程的过程中，我是发自内心的觉得讲得好，深深被他的讲课魅力所折服！</p><p>甚至我会这么说，通过对他课程的学习，我会很骄傲的说出我是一个科班出身的学生，因为我对那些科班出身的基础数据结构与算法知识都有了很好的掌握，而这种自信，皆是拜他所赐。</p><p>所以，如果你恰好在纠结如何学习《数据结构与算法》，可以试试买他的课，买不了吃亏，买不了上当！</p><h3 id="技术输出" tabindex="-1"><a class="header-anchor" href="#技术输出" aria-hidden="true">#</a> 技术输出</h3><p>今天发送的公众号消息还有另一篇文章：《【LeetCode】简单的数组问题》，是今天掌握的一类算法题型，有兴趣的同学可以看看。</p>',17),t=[p];function h(d,n){return a(),o("div",null,t)}const c=e(i,[["render",h],["__file","04.html.vue"]]);export{c as default};
